# import numpy as np
# from scipy.optimize import leastsq
# import pylab as plt
#
# N = 20 # number of data points
# #t = np.linspace(0, 4*np.pi, N)
# t=np.linspace(0,N,N)
# f = 1.15247 # Optional!! Advised not to use
# #data = 3.0*np.sin(f*t+0.001) + 0.5 + np.random.randn(N) # create artificial data with noise
# data=np.array([68.03056449310371, 76.97548023944317, 94.63593177977432, 125.48273323651021, 173.69741723818177, 135.96531633987647, 98.96349203387314, 82.73555554057857, 82.92318453474233, 93.59978370196994, 113.11876350485458, 142.95524588216517, 178.7278766100003, 138.61754565775627, 106.71599203574267, 93.32864134563863, 95.33477634891966, 107.19353091498787, 126.80972576289618, 153.6085016926386])
#
# guess_mean = np.mean(data)
# guess_std = 3*np.std(data)/(2**0.5)/(2**0.5)
# guess_phase = 0
# guess_freq = 1
# guess_amp = 1
#
# # we'll use this to plot our first estimate. This might already be good enough for you
# data_first_guess = guess_std*np.sin(t+guess_phase) + guess_mean
#
# # Define the function to optimize, in this case, we want to minimize the difference
# # between the actual data and our "guessed" parameters
# optimize_func = lambda x: x[0]*np.sin(x[1]*t+x[2]) + x[3] - data
# est_amp, est_freq, est_phase, est_mean = leastsq(optimize_func, [guess_amp, guess_freq, guess_phase, guess_mean])[0]
#
# # recreate the fitted curve using the optimized parameters
# data_fit = est_amp*np.sin(est_freq*t+est_phase) + est_mean
#
# # recreate the fitted curve using the optimized parameters
#
# fine_t = np.arange(0,max(t),0.1)
# data_fit=est_amp*np.sin(est_freq*fine_t+est_phase)+est_mean
#
# plt.plot(t, data, '.')
# plt.plot(t, data_first_guess, label='first guess')
# plt.plot(fine_t, data_fit, label='after fitting')
# plt.legend()
# plt.show()


import numpy , scipy.optimize
from scipy.optimize import fmin, root_scalar


def fit_sin(yy):
    '''Fit sin to the input time sequence, and return fitting parameters "amp", "omega", "phase", "offset", "freq", "period" and "fitfunc"'''
    tt = numpy.linspace(0, N, N)
    yy = numpy.array(yy)
    ff = numpy.fft.fftfreq(len(tt), (tt[1]-tt[0]))   # assume uniform spacing
    Fyy = abs(numpy.fft.fft(yy))
    guess_freq = abs(ff[numpy.argmax(Fyy[1:])+1])   # excluding the zero frequency "peak", which is related to offset
    guess_amp = numpy.std(yy) * 2.**0.5
    guess_offset = numpy.mean(yy)
    guess = numpy.array([guess_amp, 3.*numpy.pi*guess_freq, 30.,2.*numpy.pi*guess_freq, 20., 1.])

    def sinfunc(t, A, w1, p1, w2, p2, c):  return A * numpy.sin(w1*t + p1)* numpy.sin(w2*t + p2) + c

    popt, pcov = scipy.optimize.curve_fit(sinfunc, tt, yy, p0=guess)
    A, w1, p1,w2,p2, c = popt
    f1 = w1/(2.*numpy.pi)
    f2 = w2 / (2. * numpy.pi)
    #fitfunc1 = lambda t: A * numpy.sin(w*t + p) + c
    fitfunc = lambda t: A * numpy.sin(w1 * t + p1)*numpy.sin(w2 * t + p1) + c

    #optimize_func_double = lambda x: x[5] * np.sin(x[0] * t + x[1]) * np.sin(x[2] * t + x[3]) + x[4] - data
    return {"amp": A, "omega1": w1,"omega2": w2, "phase1": p1,"phase2": p2, "offset": c, "freq1": f1, "period1": 1./f1, "freq2": f2, "period2": 1./f2, "fitfunc": fitfunc, "maxcov": numpy.max(pcov), "rawres": (guess,popt,pcov)}



import pylab as plt

N, amp, omega, phase, offset, noise = 50, 1., 2., .5, 4., 3
#N, amp, omega, phase, offset, noise = 50, 1., .4, .5, 4., .2
#N, amp, omega, phase, offset, noise = 200, 1., 20, .5, 4., 1

tt2 = numpy.linspace(0, N, N)
tt2_org = numpy.linspace(0, 50, 50)
#yy = amp*numpy.sin(omega*tt + phase) + offset
#yynoise = yy + noise*(numpy.random.random(len(tt))-0.5)


######### 2 distanced ones##########
#data=numpy.array([68.03056449310371, 76.97548023944317, 94.63593177977432, 125.48273323651021, 173.69741723818177, 135.96531633987647, 98.96349203387314, 82.73555554057857, 82.92318453474233, 93.59978370196994, 113.11876350485458, 142.95524588216517, 178.7278766100003, 138.61754565775627, 106.71599203574267, 93.32864134563863, 95.33477634891966, 107.19353091498787, 126.80972576289618, 153.6085016926386])
#data=numpy.array([11028.389474055257, 10545.290307480547, 11309.702608684767, 10953.478104264512, 9490.655938863674, 9277.899004926956, 10013.37605263388, 9391.635333890035, 7997.4544664919695, 8111.278889631673, 8781.021784058872, 7846.065031122852, 6485.066788451233, 6927.392506900476, 7504.9844960445735, 6294.464567689266, 5063.033847607378, 5919.481625298462, 6329.709866540315, 4746.514610427045, 3684.193352871236, 5031.944710853483, 5227.772542939686, 3237.2191277748007, 2591.697951421221, 4481.788163901638, 4345.306835732361, 1797.8265555657151, 2118.8862441822303, 4314.027460110706, 3820.9837187464277, 1016.301688774876, 2663.183353416668, 4604.68514548652, 3801.1677665745556, 1941.518217907543, 3810.4953326289815, 5271.835885653025, 4326.266297785781, 3380.044000089136])
#data=numpy.array([0.0880421603889265, 56.07628881827855, 65.31132495615554, 37.66807276733564, 3.643395022837948, 52.11058349840695, 56.06541824012557, 29.063806439040814, 6.613244887851568, 47.906947115730674, 46.78041922017304, 20.698738777220484, 9.65154491274217, 42.32854730154016, 35.997014455790975, 11.702129264095984, 12.750300310182679, 34.78208537888765, 23.703467786742845, 1.4245032035440672, 16.714040454887524, 22.12999755647789, 7.955967340053658, 11.666202361231072, 22.79448254446435, 0.48921747883999933, 10.762177746810027, 29.09704150736455, 38.31777310592183, 35.02943822791806, 32.79618952143335, 52.6205654646072, 120.61740801508437, 66.88733466287687, 53.9840154316756, 79.52545816399471, 172.73437689205366, 86.6209023339052, 72.64759271537386, 103.03134801462352])
#data=data[:30]*10
#data=data[:30]/100

#data=numpy.array([11794.229808941758, 12180.405731408937, 12705.617298994894, 11525.331630610095, 10494.84027647058, 11060.409250900122, 11287.087204141375, 9942.793783258001, 9140.016957267002, 9828.870180324939, 9795.576659642784, 8377.317950446393, 7878.083843928536, 8677.591907279128, 8337.814059241151, 6796.049341634576, 6605.071537808403, 7484.780343178514, 6858.287795881103, 5258.267919667267, 5505.437280098921, 6422.24009806898, 5416.348692182848, 3708.1314669406015, 4536.152186998272, 5441.665040018801, 4033.126213332716, 2270.8670958609546, 3948.237801722908, 4711.40074668689, 2800.817587358805, 1172.7861055857654, 3822.8885722699783, 4314.99055168413, 2071.0696518859345, 1612.4760481871783, 4236.881257251268, 4358.257296700224, 2331.295350802252, 2973.4495410108057, 5049.077470477013, 4849.730720203501, 3381.2154642454598, 4453.958729739497, 6081.687224873179, 5642.07973750142, 4717.212285527345, 5989.9888399319225, 7248.726944768323, 6656.324227115006, 6153.905315327593, 7524.422657312168, 8468.268571391007, 7770.967559261871, 7635.951488917559, 9061.455743050145, 9716.492413079357, 8967.678657786879, 9145.019479530523, 10602.988255108557, 10957.496141778434, 10177.81981277356, 10652.207083555535, 12116.505585536655, 12170.31011577326, 11409.833296048233, 12184.513250131324, 13638.993891918206, 13315.027587463692, 12595.508847249084, 13682.841602670866, 15095.404987325332, 14352.271709046725, 13744.738877345128, 15206.103865677753, 16512.985377093548, 15181.214321402073, 14747.907989899988, 16643.36695475372, 17690.699572869114, 15710.628160248563, 15559.265548945003, 17987.585892507293, 18214.61404916723, 15792.15943542932, 16001.260371506138, 18666.70148154194, 17598.03543994188, 15425.603530109867, 15952.531465487305, 17913.31974543237, 16371.33905681884, 14712.385470603458, 15466.966989362023, 16609.282113050875, 14986.25094619188, 13746.021513992006, 14581.391886077465, 15106.277981639772, 13533.834296875293])
#data=numpy.array([6824.012562486596, 6663.057233077338, 6634.572050219527, 6728.760757477477, 6912.03111389415, 7135.82440899787, 7347.268167461343, 7498.055902024934, 7550.817574381502, 7483.388216957089, 7291.081592997203, 6986.882778332741, 6599.857098975905, 6172.533125609007, 5757.56676094046, 5412.506870253456, 5190.003560726078, 5122.820230761996, 5210.301186699545, 5417.2962566070755, 5686.996525024313, 5957.358507951267, 6172.619945102896, 6289.325012462233, 6279.353905256371, 6131.442020874201, 5851.493653841708, 5461.870119833621, 5000.403663231315, 4519.993686671089, 4088.1338394528643, 3781.2721108163696, 3664.210551497345, 3756.282349932775, 4016.2435233215488, 4366.271089961261, 4725.595812559426, 5027.2995379935255, 5221.789799948179, 5276.476926664217, 5175.2844306117, 4918.147599880561, 4520.097236569316, 4010.478681085864, 3434.180141294727, 2858.2015356560664, 2385.8523868506727, 2158.161282251338, 2268.194658959877, 2647.7387865727364, 3147.2669613081903, 3648.5016696225894, 4075.7266252856884, 4379.8267322347, 4529.092686572386, 4506.088846979979, 4306.678259130529, 3938.9788892464176, 3421.6284960539983, 2782.0389876642544, 2057.0654912939763, 1306.635109757029, 725.8709268561565, 919.0028930128216, 1610.2897358244575, 2343.0665346353344, 3011.3827866972415, 3568.6432205674805, 3982.354523579018, 4228.778387446216, 4293.602455056617, 4173.308981042574, 3875.6564351059933, 3418.958524201649, 2831.023529790972, 2150.5234109295884, 1441.5477909933174, 886.7759930796259, 983.115631976318, 1618.0828356086613, 2350.338158484511, 3045.0207928516816, 3647.3843764667718, 4121.77417526223, 4442.300622621086, 4592.683148370507, 4567.977705539981, 4376.1595115386235, 4039.1412670153923, 3594.2012268420217, 3098.371845468217, 2638.8742798074595, 2342.999798629394, 2339.5685011423743, 2644.579166562957, 3146.749936553939, 3719.7865454293624, 4273.465995839981, 4747.525522204299, 5101.230441456328])
#data=numpy.array([16.078420656235565, 8.592402436350262, 0.86401846589045, 7.396891852923855, 16.529205045413264, 26.413510094792585, 35.797771528457105, 42.661055532752684, 45.80742574236705, 45.49656060394991, 42.6788591084073, 38.25553170444099, 32.85301529000712, 26.873302854396666, 20.59371898296035, 14.225842619275756, 7.918957088236514, 1.7238749465887149, 4.45451732917294, 10.866666398246402, 17.774099006999467, 24.981983349240963, 31.30400550656645, 35.08639177564471, 35.66145548244527, 33.613476685584175, 29.885693809620534, 25.187893931446823, 19.94606540227414, 14.42887496285482, 8.84667616009667, 3.38731156546055, 1.7925885164173807, 6.594626461611997, 11.000473441094748, 15.058443852341346, 18.76984436126256, 21.816396612369108, 23.42927933396504, 23.024172480988526, 20.853129674636914, 17.549897913521658, 13.55527681398657, 9.086470224574526, 4.282182247807904, 0.7100042695566687, 5.711384847545133, 10.520582234476635, 14.921200943614641, 18.65502101305292, 21.313721102286774, 22.092986788563497, 19.56779740702302, 12.813062909826677, 4.645692699583164, 0.8606823195063226, 3.8604447914645865, 6.156374148661709, 8.785042539749611, 12.068934498473713, 15.995907102022956, 20.42179581785688, 25.163483068868803, 30.04268752813514, 34.88536457799563, 39.42073191986734, 42.83520457321978, 41.71742347245913, 19.27513720803076, 31.100507583990677, 42.565528711465056, 39.796804080830405, 35.97042696378581, 33.91908144104829, 33.97587238550073, 35.87089579573089, 39.25822747327773, 43.869534896195745, 49.58743780950262, 56.534243107827955, 65.2501613069261, 77.17681744521072, 96.39377103702492, 136.4209991484753, 156.26302497824068, 114.26272882596568, 90.2668697437781, 74.43441304336717, 64.54863027064525, 59.38559540336803, 57.862880368052835, 59.13179316409015, 62.6197340996866, 68.0368173293573, 75.41407845077754, 85.20219042874855, 98.43822748251263, 116.84760969065864, 142.07127768931895, 172.70493115997135])
#data=numpy.array([8094.628205807373, 8221.849917892587, 8407.698839150096, 8605.177293332003, 8766.671311051534, 8851.30997681456, 8830.911923700762, 8694.005927848017, 8447.291793568094, 8114.377158853938, 7732.439008308553, 7347.667332369368, 7009.577581995266, 6763.465547069241, 6640.87047368357, 6650.629044430025, 6775.353309966058, 6975.957351777923, 7201.549562814118, 7399.794750917321, 7525.039945539991, 7544.027326637128, 7439.584003805326, 7212.290776445823, 6880.081343764534, 6476.276593142507, 6046.7735196799495, 5646.358159119836, 5332.420459112752, 5153.463980481071, 5133.464774348237, 5261.005816691796, 5492.842230011345, 5769.055575361756, 6028.540715508245, 6218.706830132157, 6300.370850436768, 6250.263021836897, 6062.184613027513, 5746.980880523657, 5331.647516357851, 4858.451350256493, 4384.707066792969, 3981.5982463252667, 3725.162233547927, 3670.3336120894037, 3818.372967402806, 4113.532321896096, 4474.2088796832895, 4822.776355584562, 5097.347900037713, 5253.394881571094, 5263.216270031429, 5115.512904216583, 4814.763128446074, 4380.243925429335, 3845.5767782315893, 3261.123144349717, 2702.8360453764326, 2287.0996512633187, 2155.2499866131184, 2358.3587682030543, 2788.330408730964, 3298.4212803090804, 3784.3068343972877, 4179.565582391713, 4440.79218863855, 4540.638264346027, 4465.653626798637, 4215.442118516028, 3801.417239896529, 3244.9357553764867, 2575.8882534588706, 1835.2127966005235, 1099.9858778939308, 680.8537706972704, 1103.8960567181987, 1828.35324071664, 2548.634272282005, 3188.2813424817696, 3706.3283107016964, 4072.9540401665467, 4267.040278944388, 4277.32720287485, 4103.618621092296, 3756.8935285807634, 3258.330949334135, 2638.5502847360362, 1940.9245284020824, 1246.834204839587, 826.0690361052988, 1142.304241196548, 1832.2022951062725, 2561.4071519063345, 3233.4093465220135, 3801.3848944727883, 4232.84570605633, 4504.595220724968, 4603.489309434411, 4528.244691826853])


############ 2 close########

#data=numpy.array([10101.063765932005, 9845.041199669471, 9508.601863355738, 9130.550061208982, 8756.373153256038, 8431.93942276221, 8196.591996160241, 8075.856539422016, 8075.50426389452, 8179.623986340035, 8353.963976432264, 8553.11205392587, 8728.839614987703, 8837.789013066791, 8847.83785970355, 8742.708678491834, 8524.177897709445, 8211.516349670079, 7838.622023571288, 7449.740765378928, 7094.137449367481, 6819.13279788702, 6660.998683842679, 6635.406351391289, 6731.9835238942005, 6916.696570517845, 7140.783857523403, 7351.386157856081, 7500.3754049164045, 7550.677123787713, 7480.493431626693, 7285.53077405377, 6979.14906345965, 6590.741763318484, 6163.093287698656, 5749.038326905224, 5406.144612200425, 5186.799302621781, 5123.151018731254, 5213.740284711597, 5422.766532273112, 5693.140191276509, 5962.854764294259, 6176.368601350308, 6290.537832990514, 6277.59800280294, 6126.665499425359, 5844.013730350093, 5452.3534525172345, 4989.849211845794])
data_org=numpy.array([54.18774988775157, 48.066871865365556, 40.94392808335357, 33.08749146592149, 24.704450441638542, 15.92184102688897, 6.721616540181973, 3.1137695228403377, 13.913036647963299, 25.67502241092539, 37.33860009331154, 46.82751871461432, 52.52838276045228, 54.28579155295427, 52.88536568947857, 49.26596813439121, 44.16685794014423, 38.09069597606885, 31.376004556359355, 24.267644474348515, 16.94084942414486, 9.472834199275884, 1.7842531699261694, 6.395308435886173, 15.41667546636493, 25.25261272125989, 34.79720502855182, 42.04462109108431, 45.633962488556726, 45.68123544938142, 43.10441881847599, 38.83051163679037, 33.51800176796311, 27.589594109768, 21.333013541018524, 14.966325158393463, 8.647391522539177, 2.4410211393875776, 3.7290068314175904, 10.097955001954423, 16.94292458121573, 24.156211165213513, 30.670789228604903, 34.81200766664463, 35.74749629640943, 33.9552761388043, 30.380271690422816, 25.769112794574184, 20.57494026087136, 15.078421387216636])
data=numpy.array([54.18774988775157, 48.066871865365556, 40.94392808335357, 33.08749146592149, 24.704450441638542, 15.92184102688897, 6.721616540181973, 3.1137695228403377, 13.913036647963299, 25.67502241092539, 37.33860009331154, 46.82751871461432, 52.52838276045228, 54.28579155295427, 52.88536568947857, 49.26596813439121, 44.16685794014423, 38.09069597606885, 31.376004556359355, 24.267644474348515, 16.94084942414486, 9.472834199275884, 1.7842531699261694, 6.395308435886173, 15.41667546636493, 25.25261272125989, 34.79720502855182, 42.04462109108431, 45.633962488556726, 45.68123544938142, 43.10441881847599, 38.83051163679037, 33.51800176796311, 27.589594109768, 21.333013541018524, 14.966325158393463, 8.647391522539177, 2.4410211393875776, 3.7290068314175904, 10.097955001954423])#, 16.94292458121573, 24.156211165213513, 30.670789228604903, 34.81200766664463, 35.74749629640943, 33.9552761388043, 30.380271690422816, 25.769112794574184, 20.57494026087136, 15.078421387216636])

#data=numpy.array([48.999672552498005, 35.12267074631075, 18.236267874359722, 0.504107828249378, 15.790709085009743, 29.586879987243623, 40.887395383567124, 50.0410472681362, 57.36059598747935, 63.033872953766206, 67.12952874505555, 69.61034649862854, 70.33277475301912, 69.03198552349289, 65.29883631718597, 58.57501850672244, 48.2572039678007, 34.11032692799835, 17.03726066552135, 0.7118325186345772, 16.883832787686913, 30.507417602209983, 41.64040160617417, 50.64568190552313, 57.833059116901616, 63.38311789473643, 67.35667585166726, 69.70837304033151, 70.28601241273185, 68.81548865461798, 64.87873472838315, 57.913835066302795, 47.33431025580661, 32.968236046701946, 15.818202422872236, 1.8331385032382441, 17.81931941249627, 31.26166792115306, 42.24841898437553, 51.136882936210654, 58.22439164696725, 63.68161220291872, 67.56227622023331, 69.81505344067708, 70.28106955662983, 68.6772666595662, 64.573480671234, 57.3948494394637, 46.554042976472466, 31.922480915983023])
#data=numpy.array([60.34237631248943, 56.99754035551929, 53.058705249619706, 48.499952647285646, 43.314904589758044, 37.52706788284987, 31.199347877721564, 24.438605291196584, 17.391093393450113, 10.226887994500707, 3.1169434774632996, 3.789720119620451, 10.381253615052902, 16.587343115666176, 22.374641865149652, 27.73752448024341, 32.688116622175656, 37.24800289214904, 41.442320507832235, 45.295997556947704, 48.83170375462068, 52.06888810297138, 55.02347160874815, 57.70789438124354, 60.13130474760094, 62.299788882414724, 64.21658002694716, 65.88219287302269, 67.29451514362273, 68.44881925863852, 69.33768512921414, 69.95090999713537, 70.2753189507195, 70.29454214227806, 69.98877271564811, 69.33446017008956, 68.30414046049935, 66.86626137441539, 64.98536324663384, 62.622686481704896, 59.73758451761328, 56.29023133004181, 52.24614036809676, 47.58289429190277, 42.29924884259158, 36.42529662908948, 30.031228637995966, 23.230382680206063, 16.172792748212384, 9.028294396641753])

x1 = 5
res = fit_sin(data_org)
#print( "Amplitude=%(amp)s, Angular freq.=%(omega)s, phase=%(phase)s, offset=%(offset)s, Max. Cov.=%(maxcov)s" % res )
#print(data)
#print(tt)
#t=numpy.fmin([2, 3, 4], [1, 5, 2])
coefficients=numpy.polyfit(tt2,data_org,15)

poly = numpy.poly1d(coefficients)
# xmin1=fmin(tt2,data)
# print(xmin1)

#sol = root_scalar(fit_sin, bracket=[1, 10], method='brentq')

#print(sol)
#plt.plot(tt, yy, "-k", label="y", linewidth=2)
plt.plot(tt2_org, data_org, "ok", label="y with noise")
plt.plot(tt2_org, res["fitfunc"](tt2_org), "r-", label="y fit curve", linewidth=2)
plt.plot(tt2, poly(tt2), "g-", label="poly", linewidth=2)
# x       plt.plot(tt2_org, poly(tt2_org), "b-", label="poly org", linewidth=2)
#plt.plot(tt2, xmin1, "g-", label="min", linewidth=2)
plt.legend(loc="best")
plt.show()